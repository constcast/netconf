<?xml version="1.0" encoding="UTF-8"?>
   <xs:schema
     targetNamespace="urn:ietf:params:xml:ns:netconf:base:1.0"
     elementFormDefault="qualified"
     attributeFormDefault="unqualified"
     xmlns:xs="http://www.w3.org/2001/XMLSchema"
     xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
     <!--
       <rpc> element
       -->
     <xs:complexType name="rpcType">
       <xs:sequence>
         <xs:element ref="rpcOperation"/>
       </xs:sequence>
       <xs:attribute name="message-id" type="xs:string" use="required"/>
     </xs:complexType>
     <xs:element name="rpc" type="rpcType"/>
     <!--
       data types and elements used to construct rpc-errors
       -->
     <xs:simpleType name="SessionId">
       <xs:restriction base="xs:unsignedInt"/>
     </xs:simpleType>
     <xs:simpleType name="ErrorType">
       <xs:restriction base="xs:string">
         <xs:enumeration value="transport"/>
         <xs:enumeration value="rpc"/>
         <xs:enumeration value="protocol"/>
         <xs:enumeration value="application"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:simpleType name="ErrorTag">
       <xs:restriction base="xs:string">
         <xs:enumeration value="INVALID_VALUE"/>
         <xs:enumeration value="TOO_BIG"/>
         <xs:enumeration value="MISSING_ATTRIBUTE"/>
         <xs:enumeration value="BAD_ATTRIBUTE"/>
         <xs:enumeration value="UNKNOWN_ATTRIBUTE"/>
         <xs:enumeration value="MISSING_ELEMENT"/>
         <xs:enumeration value="BAD_ELEMENT"/>
         <xs:enumeration value="UNKNOWN_ELEMENT"/>
         <xs:enumeration value="ACCESS_DENIED"/>
         <xs:enumeration value="LOCK_DENIED"/>
         <xs:enumeration value="RESOURCE_DENIED"/>
         <xs:enumeration value="ROLLBACK_FAILED"/>
         <xs:enumeration value="DATA_EXISTS"/>
         <xs:enumeration value="DATA_MISSING"/>
         <xs:enumeration value="OPERATION_NOT_SUPPORTED"/>
         <xs:enumeration value="OPERATION_FAILED"/>
         <xs:enumeration value="PARTIAL_OPERATION"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:simpleType name="ErrorSeverity">
       <xs:restriction base="xs:string">
         <xs:enumeration value="error"/>
         <xs:enumeration value="warning"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:complexType name="rpc-errorType">
       <xs:sequence>
         <xs:element name="error-type" type="ErrorType"/>
         <xs:element name="error-tag" type="ErrorTag"/>
         <xs:element name="error-severity" type="ErrorSeverity"/>
         <xs:element name="error-app-tag"
           type="xs:string" minOccurs="0"/>
         <xs:element name="error-path"
           type="xs:string" minOccurs="0"/>
         <xs:element name="error-message"
           type="xs:string" minOccurs="0"/>
         <xs:element name="error-info"
           type="xs:anyType" minOccurs="0"/>
       </xs:sequence>
     </xs:complexType>
     <!--
       elements used in the <error-info> container
       -->
     <xs:element name="bad-attribute" type="xs:QName"/>
     <xs:element name="bad-element" type="xs:QName"/>
     <xs:element name="ok-element" type="xs:QName"/>
     <xs:element name="err-element" type="xs:QName"/>
     <xs:element name="noop-element" type="xs:QName"/>
     <xs:element name="session-id" type="SessionId"/>
     <!--
       <rpc-reply> element
       -->
     <xs:complexType name="rpc-replyType">
       <xs:choice>
         <xs:element name="ok" minOccurs="0"/>
         <xs:element name="rpc-error"
           type="rpc-errorType" minOccurs="0"/>
         <xs:element ref="data" minOccurs="0"/>
       </xs:choice>
       <xs:attribute name="message-id" type="xs:string" use="required"/>
     </xs:complexType>
     <xs:element name="rpc-reply" type="rpc-replyType"/>
     <!--
       <test-option> parameter to <edit-config>
       -->
     <xs:simpleType name="test-optionType">
       <xs:restriction base="xs:string">
         <xs:enumeration value="test-then-set"/>
         <xs:enumeration value="set"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:element name="test-option" type="test-optionType"/>
     <!--
       <error-option> parameter to <edit-config>
       -->
     <xs:simpleType name="error-optionType">
       <xs:restriction base="xs:string">
         <xs:enumeration value="stop-on-error"/>
         <xs:enumeration value="ignore-error"/>
         <xs:enumeration value="rollback-on-error"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:element name="error-option" type="error-optionType"/>
     <!--
       rpcOperationType: used as a base type for all
       NETCONF operations
       -->
     <xs:complexType name="rpcOperationType"/>
     <xs:element name="rpcOperation"
         type="rpcOperationType" abstract="true"/>
     <!--
       <config> element
       -->
     <xs:complexType name="config-inlineType">
       <xs:complexContent>
         <xs:extension base="xs:anyType"/>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="config" type="config-inlineType"/>
     <!--
       <data> element
       -->
     <xs:complexType name="data-inlineType">
       <xs:complexContent>
         <xs:extension base="xs:anyType"/>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="data" type="data-inlineType"/>
     <!--
       <filter> element
       -->
     <xs:simpleType name="FilterType">
       <xs:restriction base="xs:string">
         <xs:enumeration value="subtree"/>
         <xs:enumeration value="xpath"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:complexType name="filter-inlineType">
       <xs:complexContent>
         <xs:extension base="xs:anyType">
           <xs:attribute name="type" type="FilterType" default="subtree"/>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="filter" type="filter-inlineType"/>
     <!--
       configuration datastore names
       -->
     <xs:complexType name="config-nameType"/>
     <xs:element name="config-name"
       type="config-nameType" abstract="true"/>
     <xs:element name="startup" type="config-nameType"
       substitutionGroup="config-name"/>
     <xs:element name="candidate" type="config-nameType"
       substitutionGroup="config-name"/>
     <xs:element name="running" type="config-nameType"
       substitutionGroup="config-name"/>
     <!--
       operation attribute used in <edit-config>
       -->
     <xs:simpleType name="EditOperationType">
       <xs:restriction base="xs:string">
         <xs:enumeration value="merge"/>
         <xs:enumeration value="replace"/>
         <xs:enumeration value="create"/>
         <xs:enumeration value="delete"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:attribute name="operation"
       type="EditOperationType" default="merge"/>
     <!--
       <default-operation> element
       -->
     <xs:simpleType name="DefaultOperationType">
       <xs:restriction base="xs:string">
         <xs:enumeration value="merge"/>
         <xs:enumeration value="replace"/>
         <xs:enumeration value="none"/>
       </xs:restriction>
     </xs:simpleType>
     <xs:element name="default-operation" type="DefaultOperationType"/>
     <!--
       <url> element
       -->
     <xs:complexType name="config-uriType">
       <xs:simpleContent>
         <xs:extension base="xs:anyURI"/>
       </xs:simpleContent>
     </xs:complexType>
     <xs:element name="url" type="config-uriType"/>
     <!--
       <source> element
       -->
     <xs:complexType name="rpcOperationSourceType">
       <xs:choice>
         <xs:element ref="config"/>
         <xs:element ref="config-name"/>
         <xs:element ref="url"/>
       </xs:choice>
     </xs:complexType>
     <xs:element name="source" type="rpcOperationSourceType"/>
     <!--
       <target> element
       -->
     <xs:complexType name="rpcOperationTargetType">
       <xs:choice>
         <xs:element ref="config-name"/>
         <xs:element ref="url"/>
       </xs:choice>
     </xs:complexType>
     <xs:element name="target" type="rpcOperationTargetType"/>
     <!--
       <get-config> operation
       -->
     <xs:complexType name="get-configType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="source"/>
             <xs:element ref="filter" minOccurs="0" maxOccurs="1"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="get-config" type="get-configType"
       substitutionGroup="rpcOperation"/>
     <!--
       <edit-config> operation
       -->
     <xs:complexType name="edit-configType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="target"/>
             <xs:element ref="default-operation" minOccurs="0"/>
             <xs:element ref="test-option" minOccurs="0"/>
             <xs:element ref="error-option" minOccurs="0"/>
             <xs:element ref="config" minOccurs="0"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="edit-config" type="edit-configType"
       substitutionGroup="rpcOperation"/>
     <!--
       <copy-config> operation
       -->
     <xs:complexType name="copy-configType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="source"/>
             <xs:element ref="target"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="copy-config" type="copy-configType"
       substitutionGroup="rpcOperation"/>
     <!--
       <delete-config> operation
       -->
     <xs:complexType name="delete-configType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="target"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="delete-config" type="delete-configType"
       substitutionGroup="rpcOperation"/>
     <!--
       <get> operation
       -->
     <xs:complexType name="getType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="filter" minOccurs="0" maxOccurs="1"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="get" type="getType"
       substitutionGroup="rpcOperation"/>
     <!--
       <lock> operation
       -->
     <xs:complexType name="lockType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="target"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="lock" type="lockType"
       substitutionGroup="rpcOperation"/>
     <!--
       <unlock> operation
       -->
     <xs:complexType name="unlockType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="target"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="unlock" type="unlockType"
       substitutionGroup="rpcOperation"/>
     <!--
       <validate> operation
       -->
     <xs:complexType name="validateType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="source"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="validate" type="validateType"
       substitutionGroup="rpcOperation"/>
     <!--
       <commit> operation
       -->
     <xs:complexType name="commitType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element name="confirmed" minOccurs="0"/>
             <xs:element name="confirm-timeout" minOccurs="0"/>
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="commit" type="commitType"
       substitutionGroup="rpcOperation"/>
     <!--
       <discard-changes> operation
       -->
     <xs:complexType name="discard-changesType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType"/>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="discard-changes" type="discard-changesType"
       substitutionGroup="rpcOperation"/>
     <!--
       <close-session> operation
       -->
     <xs:complexType name="close-sessionType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType"/>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="close-session" type="close-sessionType"
       substitutionGroup="rpcOperation"/>
     <!--
       <kill-session> operation
       -->
     <xs:complexType name="kill-sessionType">
       <xs:complexContent>
         <xs:extension base="rpcOperationType">
           <xs:sequence>
             <xs:element ref="session-id" minOccurs="0" maxOccurs="1" />
           </xs:sequence>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
     <xs:element name="kill-session" type="kill-sessionType"
       substitutionGroup="rpcOperation"/>
     <!--
       <hello> element
       -->
     <xs:element name="capability" type="xs:anyURI" />
     <xs:element name="capabilities">
       <xs:complexType>
         <xs:sequence>
           <xs:element ref="capability" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:complexType>
     </xs:element>
     <xs:element name="hello">
       <xs:complexType>
         <xs:sequence>
           <xs:element ref="capabilities" maxOccurs="1" />
           <xs:element ref="session-id" minOccurs="0" maxOccurs="1" />
         </xs:sequence>
       </xs:complexType>
     </xs:element>

   </xs:schema>












